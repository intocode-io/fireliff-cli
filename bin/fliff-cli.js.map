{"version":3,"sources":["../lib/fliff-cli.js"],"names":["commandLineArgs","require","commandLineUsage","operation","_unknown","name","defaultOption","stopAtFirstUnknown","argv","options","type","String","Boolean","alias","fliff","FLIFF","help","console","log","addUsage","updateUsage","deleteUsage","getUsage","tokenUsage","initUsage","configUsage","fliffUsage","process","exit","indexOf","then","config","verbose","add","rsAdd","input","info","catch","errAdd","message","error","delete","rsDelete","id","errDelete","get","rsGet","Array","isArray","table","errGet","update","rsUpdate","errUpdate","issue","revoke","undefined","token","rsToken","accessToken","JSON","stringify","save","warn","errToken","initPath","path","resolve","cwd","init","rsInit","files","forEach","dest","installNow","errInit","pjson","version","rsConfig","errConfig","commandError"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nimport 'console.table';\nimport * as path from 'path';\nimport pjson from '../package.json';\nimport './colors-set-theme';\nimport { FLIFF } from './fliff.js';\nimport { commandErrorHandler, getConfig, validateConfig } from './shared';\nimport fliffUsage, {\n  addUsage,\n  updateUsage,\n  getUsage,\n  deleteUsage,\n  initUsage,\n  configUsage,\n  tokenUsage,\n} from './fliff-cli-usage';\n\ntry {\n  const commandLineArgs = require('command-line-args');\n  const commandLineUsage = require('command-line-usage');\n\n  const { operation, _unknown } = commandLineArgs(\n    [{ name: 'operation', defaultOption: true }],\n    { stopAtFirstUnknown: true }\n  );\n  const argv = _unknown || [];\n  const options = commandLineArgs(\n    [\n      { name: 'ble', type: String },\n      { name: 'description', type: String },\n      { name: 'id', type: String },\n      { name: 'issue', type: Boolean },\n      { name: 'name', type: String },\n      { name: 'revoke', type: String },\n      { name: 'save', type: Boolean },\n      { name: 'secret', type: String },\n      { name: 'type', type: String },\n      { name: 'url', type: String },\n      { name: 'version', alias: 'v', type: Boolean },\n      { name: 'detail', type: Boolean },\n      { name: 'help', alias: 'h', type: Boolean },\n    ],\n    { argv }\n  );\n  const fliff = new FLIFF();\n\n  if (options.help) {\n    switch (operation) {\n      case 'add':\n        console.log(commandLineUsage(addUsage));\n        break;\n      case 'update':\n        console.log(commandLineUsage(updateUsage));\n        break;\n      case 'delete':\n        console.log(commandLineUsage(deleteUsage));\n        break;\n      case 'get':\n        console.log(commandLineUsage(getUsage));\n        break;\n      case 'token':\n        console.log(commandLineUsage(tokenUsage));\n        break;\n      case 'init':\n        console.log(commandLineUsage(initUsage));\n        break;\n      case 'config':\n        console.log(commandLineUsage(configUsage));\n        break;\n      default:\n        console.log(commandLineUsage(fliffUsage));\n    }\n    process.exit(0);\n  }\n\n  // Commands that need Functions config\n  if (['add', 'update', 'delete', 'get', 'token'].indexOf(operation) > -1) {\n    getConfig().then((config) => {\n      switch (operation) {\n        case 'add':\n          validateConfig(config);\n          console.log('Sending request to add LIFF view...'.verbose);\n          fliff\n            .add(options)\n            .then((rsAdd) => {\n              console.log(\n                `Created ${options.name.input} view with LIFF ID: ${rsAdd.info}`\n                  .verbose\n              );\n              return rsAdd;\n            })\n            .catch((errAdd) => {\n              const message = errAdd.message || errAdd;\n              console.log(message.error);\n              process.exit(1);\n            });\n\n          break;\n\n        case 'delete':\n          validateConfig(config);\n          console.log(`Sending request to delete LIFF view(s)...`.verbose);\n          fliff\n            .delete(options)\n            .then((rsDelete) => {\n              console.log(\n                `Deleted view with LIFF ID: ${options.id.input}`.verbose\n              );\n              console.log(\n                `Unset view(s) in Functions configuration`.info,\n                rsDelete\n              );\n              return rsDelete;\n            })\n            .catch((errDelete) => {\n              const message = errDelete.message || errDelete;\n              console.log(message.error);\n              process.exit(1);\n            });\n          break;\n\n        case 'get':\n          validateConfig(config);\n          console.log('Sending request to get LIFF view(s)...'.verbose);\n          fliff\n            .get(options)\n            .then((rsGet) => {\n              if (Array.isArray(rsGet)) {\n                console.table(rsGet);\n              } else {\n                console.log(rsGet);\n              }\n              return rsGet;\n            })\n            .catch((errGet) => {\n              const message = errGet.message || errGet;\n              console.log(message.error);\n              process.exit(1);\n            });\n\n          break;\n\n        case 'update':\n          validateConfig(config);\n          console.log(`Sending request to update LIFF view`.verbose);\n          fliff\n            .update(options)\n            .then((rsUpdate) => {\n              console.log(`Updated LIFF ID: ${options.id.input}`.info);\n\n              return rsUpdate;\n            })\n            .catch((errUpdate) => {\n              const message = errUpdate.message || errUpdate;\n              console.log(message.error);\n              process.exit(1);\n            });\n          break;\n\n        case 'token':\n          if (options.issue === true) {\n            console.log('Issuing channel access token'.verbose);\n          } else if (options.revoke !== undefined) {\n            console.log('Revoking channel access token'.verbose);\n          }\n\n          fliff\n            .token(options)\n            .then((rsToken) => {\n              if (options.issue === true && rsToken.accessToken) {\n                console.log(`The following token has been issued.`.info);\n                console.log(JSON.stringify(rsToken, undefined, 2));\n\n                if (options.save === true) {\n                  console.log(\n                    `The access token is saved on Firebase Functions Configuration.`\n                      .info\n                  );\n                } else {\n                  console.log(\n                    `This access token is NOT saved on Firebase Functions Configuration.`\n                      .warn\n                  );\n                  console.log(\n                    `If you would like to saved on Firebase Functions Configuration. Try re-run using ${\n                      'fliff token --issue --save'.input\n                    } `.help\n                  );\n                }\n              } else if (options.revoke !== undefined && rsToken === true) {\n                console.log(`The token is revoked.`.info);\n              } else {\n                console.log('Unknown response').warn;\n              }\n\n              return rsToken;\n            })\n            .catch((errToken) => {\n              const message = errToken.message || errToken;\n              console.log(message.error);\n              process.exit(1);\n            });\n\n          break;\n\n        default:\n      }\n    });\n  } else if (operation) {\n    const initPath = path.resolve(process.cwd(), 'web-views');\n\n    switch (operation) {\n      case 'init':\n        fliff\n          .init(initPath)\n          .then((rsInit) => {\n            console.log('Generated files'.info);\n            rsInit.files.forEach((dest) => console.log(dest.info));\n            if (rsInit.message) {\n              console.log(rsInit.message);\n            }\n            return true;\n          })\n          .then(() => fliff.installNow(initPath))\n          .catch((errInit) => {\n            const message = errInit.message || errInit;\n            console.log(message.error);\n            process.exit(1);\n          });\n        break;\n      case 'version':\n        console.log(`Version: ${pjson.version}`);\n        break;\n      case 'config':\n        console.log(`Configuring Firebase Functions`.verbose);\n        fliff\n          .config(options)\n          .then((rsConfig) => {\n            console.log(`The following property has been updated.`.info);\n            console.log(JSON.stringify(rsConfig, undefined, 2));\n            console.log(`Firebase Functions configured`.info);\n\n            return rsConfig;\n          })\n          .catch((errConfig) => {\n            const message = errConfig.message || errConfig;\n            console.log(message.error);\n            process.exit(1);\n          });\n        break;\n      case 'help':\n      default:\n        console.log(commandLineUsage(fliffUsage));\n    }\n  } else if (options.version) {\n    console.log(`Version: ${pjson.version}`);\n  } else {\n    console.log(commandLineUsage(fliffUsage));\n  }\n} catch (commandError) {\n  commandErrorHandler(commandError);\n}\n"],"file":"fliff-cli.js"}